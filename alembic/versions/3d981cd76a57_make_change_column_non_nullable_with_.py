"""Make change column non-nullable with default

Revision ID: 3d981cd76a57
Revises: 82bc2375d131
Create Date: 2025-03-04 21:35:43.370334

"""
from typing import Sequence, Union
from sqlalchemy.sql import table, column
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3d981cd76a57'
down_revision: Union[str, None] = '82bc2375d131'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
     # Define table reference
    stocks_table = table('stocks', column('change', sa.Float()))

    # Step 1: Add column with default value
    op.add_column('stocks', sa.Column('change', sa.Float(), nullable=False, server_default="0.0"))

    # Step 2: Set default value for existing rows
    op.execute(stocks_table.update().values(change=0.0))

    # Step 3: Remove the default (so future inserts must provide a value)
    op.alter_column('stocks', 'change', server_default=None)

    # Other migrations
    op.add_column('user_stocks', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'user_stocks', 'users', ['user_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_stocks', type_='foreignkey')
    op.drop_column('user_stocks', 'user_id')
    op.drop_column('stocks', 'change')
    # ### end Alembic commands ###
